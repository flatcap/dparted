plugin types
	block
	table
	filesystem
	encryption
	raid
	theme
	tool
	tooltip
	display
	command line interpreter

gui
	filemanager view which highlights partitions on selection

	vm rescue -- read fstab, mount things, chroot shell

	advanced menu option to view an unknown partition in a hex viewer

	generate named/labelled block diagrams for disk
		i.e. block 1,2,3 of volume bob lives on this disk, here

cmdline
	partition/fs clone vs copy
		clone = identical bit for bit => same uuid
		copy = efficient duplication, just copy the data regions ($Bitmap)

	incorporate partimage (norton ghost) into gparted

	take a vm image and mount / manipulate the partitions within
	after analysis, list the commands needed for the user to do the same

	check version of lvm before starting
		LVM version:     2.02.86(2) (2011-07-08)
		Library version: 1.02.65 (2011-07-08)

	prerequisites for each fs/lvm/md/crypt
		do as much as possible if they're missing

	lvm, md, ldm as separate plugins
	filesystems should be pluggable too

	zerofree plugins for other fs, understand partitions

	lib_identify_filesystem
		score potential matches (in case of damage)
	lib_identify_operating_system
		score in case of ambiguity

	get a list of supported filesystems
	/proc/filesystems
	support
		plugin/app, e.g. ntfs module
		cmdline tools, e.g. mkntfs
		kernel, e.g. ntfs.ko

	check all the necessary commands exist
	continue without them, if possible?

	how to identify an OS on a partition
	/etc/system-release for linux
	what about windows/bsd/macos/etc
	tooltip showing contents:
		"Windows 7"
		"Fedora 16"
		"Dir1\nDir2\nDir3\n..."
	must be mirrored by a properties menu option (for accessiblility)
	factor out into libos

	vm find disk offset of / (root)
		zerofree
		backup

	zerofree /mnt/space, sparsify images

	fs - identify contents
		OS - which, version, rpms?
		data
		empty
		other?

	register probe
		type: table, filesystems, logical
		size: how much to identify self

	msdos reads partition table
		knows about / creates: partition, extended, reserved
		queues probe for partition contents

	gpt reads partition table
		knows about / creates partition/reserved
		queues probe for partition

	display a measure of fragmentation

	ability to convert between different partition systems?

	offer to save the user's disk config info
	tell them what they need to recover from a disaster
	what commands they need to rescue stuff using, say, knoppix

	save / restore partition metadata

callbacks/signal
	put some limit on what containers can contain?
	what about new types (plugins) how do we know where to find them?

	register_*
		table
		filesystem
		logical
	keep track of "contained by"?

	for plugins we need to register
		partition_table
		filesystem
		volume manager?

	get_actions -> vector<desc, object, params>
	do_action
	help_action

	on event
	before action
	after action

plugin - need to probe most derived class first
	(to allow plugins to override things)
	therefore probe code should be in library or base
	then plugin could _sub_class

plugin buttons for next/prev theme
