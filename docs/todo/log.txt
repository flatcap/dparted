Output locations:
	syslog
	journal

Code features
	config file / command line
		levels -> outputs
	uniq log line numbers
		partition the numbers (by what?)
		translate strings?
		systemd messageid?
	namespace Log?
	LogInit();
		automatic?
		global
		per stream
	LogClose();

Input features
	stream
		Log << "xyz\n";
	object?
		Log (object);
			template function
			object supports <<

-------------------------------------------

log::dot
	cache output
	spawn dot on flush

logging: config file -- script to manipulate log destinations
	log_me [log_level]
	runs tty

log level push object cf LOG_TRACE

template<type X> X log return (X) calls logtrace leaving(X) (retval, line no)

main -v => log_info, main -vv => log_debug

move iprintf (indented) to log.cpp

change the log functions into a log object?
dtor would close the log

add a log_debug (DPContainer *) and ref to dump the object

LogQuell object
	when instantiated it prevents [some/all] logging
	when it is destroyed, logging is returned to normal

log_info (spec)
log::info << streamystuff << ...
log::info.format (spec)

automatic creation, cf std::cout

enable (bitfield)	} function or object (scoped)?
disable (bitfield)	}
push/pop (bitfield)
quell to end of function

trace ctor def params __FILE__ etc defined in .h _which_ file?

class Debug : public log -> public iostream {};

Log::Debug << xyz << std::endl;
Log::Debug.printf ("format %s\n", X);
Log::printf (Log::Debug, "format %s\n", X);

log_set_level (fn, level)
log_set_level (ptr, level)
