Tree Traversal

Moving Right

Start: Z (top)

ZP	(first child)			F
PA	(first child)			F
AB	(next sib)			!F, N
BC	(next sib)			!F, N
CQ	(last child, up), (next sib)	!F, N, UN
QR	(first child)			F
RL	(first child)			F
LS	(last child, up), (next sib)	!F, !N, UN
SM	(first child)			F
Mx	(last child, up) * 3, !parent	END

N	Next sibling: if !F -> M
F	First child
U	Last sibling, up


Moving Left

Start: M (last child) * n		C*

MS	(last sib, up)			!P, U
SL	(prev sib), (last child)	P, C*
LR	(last sib, up)			!P, U
RQ	(last sib, up)			!P, U
QC	(prev sib), (last child)	P, C*
CB	(prev sib)			P, !C
BA	(prev sib)			P, !C
AP	(last sib, up)			!P, U
PZ	(last sib, up)			!P, U
Zx					!P, !U

P	Previous sibling
U	Last sibling, Up: if P -> Up
C	Last child: if !P -> (Last Child) * n

